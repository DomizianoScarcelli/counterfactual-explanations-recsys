import torch
from torch import Tensor

def trim_zero(seq: Tensor) -> Tensor:
    """ Trims the final zeros of the tensor

    Args:
        seq: tensor representing the sequence with padded zeros

    Returns:
        the sequence without padded zeros
    """
    assert len(seq.shape) == 1, f"Sequence must have a single dim, {seq.shape}"
    nnz_count = torch.count_nonzero(seq)
    seq, to_be_removed = seq[:nnz_count], seq[nnz_count:]
    pass


def pad_zero(seq: Tensor, length: int) -> Tensor:
    """ Pads the sequence with zeros until it's length is equal to `length`

    Args:
        seq: tensor representing the sequence with padded zeros
        length: the desired final length

    Returns:
        the sequence with padded zeros
    """
    pass
